name: AI-Powered Code Review
author: Frank Chen (@fxchen)
description: "Enhance pull requests with AI-assisted code reviews using GPT-4 or Claude"

inputs:
  github-token:
    description: "GitHub token for API access"
    required: false
    default: ${{ github.token }}

  api-to-use:
    description: "AI provider to use (openai or claude)"
    required: false
    default: "openai"

  openai-key:
    description: "OpenAI API key (required if using OpenAI)"
    required: false

  anthropic-key:
    description: "Anthropic API key (required if using Claude)"
    required: false

  model:
    description: "AI model to use (e.g., gpt-4-turbo-preview, claude-3-sonnet-20240229)"
    required: false
    default: "gpt-4-turbo-preview"

  persona:
    description: "Review persona (developer, kent_beck, marc_benioff, yoda)"
    required: false
    default: "developer"

  style:
    description: "Review style (concise, zen)"
    required: false
    default: "concise"

  include-full-files:
    description: "Include complete file contents in review"
    required: false
    default: "false"

  post-if-error:
    description: "Post comment on review failure"
    required: false
    default: "true"

  exclude-files:
    description: "Files to exclude (comma-separated)"
    required: false
    default: "package-lock.json,yarn.lock,*.lock,*.sum"

outputs:
  results:
    description: "Code review results in markdown format"

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        cache: "pip"

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r ${{ github.action_path }}/requirements.txt
      shell: bash

    - name: Prepare Review
      id: prepare
      run: |
        # Convert exclude files to array
        IFS=', ' read -r -a exclude_array <<< "${{ inputs.exclude-files }}"
        exclude_str=""
        for file in "${exclude_array[@]}"; do
          exclude_str+=":!${file} "
        done
        echo "exclude_files=${exclude_str}" >> $GITHUB_OUTPUT
      shell: bash

    - name: Generate Diff
      run: |
        git diff --merge-base ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} -- . ${{ steps.prepare.outputs.exclude_files }} > diff.txt
      shell: bash

    - name: Run Code Review
      id: review
      run: |
        cat diff.txt | python ${{ github.action_path }}/action_code_review.py > review.txt
        echo 'review_result<<EOF' >> $GITHUB_OUTPUT
        cat review.txt >> $GITHUB_OUTPUT
        echo 'EOF' >> $GITHUB_OUTPUT
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        API_TO_USE: ${{ inputs.api-to-use }}
        OPENAI_API_KEY: ${{ inputs.openai-key }}
        ANTHROPIC_API_KEY: ${{ inputs.anthropic-key }}
        MODEL: ${{ inputs.model }}
        PERSONA: ${{ inputs.persona }}
        STYLE: ${{ inputs.style }}
        INCLUDE_FILES: ${{ inputs.include-full-files }}
        COMMIT_TITLE: ${{ github.event.pull_request.title }}
        COMMIT_BODY: ${{ github.event.pull_request.body }}

    - name: Create Review Comment
      if: success() || inputs.post-if-error == 'true'
      uses: peter-evans/create-or-update-comment@v3
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          # AI Code Review

          ${{ steps.review.outputs.review_result }}

          ---
          *Generated using ${{ inputs.api-to-use }} ${{ inputs.model }}*

branding:
  icon: "code"
  color: "purple"
